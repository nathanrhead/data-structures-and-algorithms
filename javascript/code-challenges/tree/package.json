{
  "name": "tree",
  "version": "1.0.0",
  "description": "- Code challenge 15:   - to create a Node class that has properties for the value stored in the node, the left child node, and the right child node;   - to create a BinaryTree class;   - to define a method for each of the depth first traversals called preOrder, inOrder, and postOrder which returns an array of the values, ordered appropriately;   - to handle any exceptions or errors that come from your code semantically, with capturable errors. For example, rather than a default error thrown by your language, your code should raise/throw a custom, semantic error that describes what went wrong in calling the methods you wrote for this lab;   - to create a BinarySearchTree class;   - to define a method named add that accepts a value, and adds a new node with that value in the correct location in the binary search tree.   -to define a method named contains that accepts a value, and returns a boolean indicating whether or not the value is in the tree at least once.",
  "main": "tree.js",
  "scripts": {
    "test": "jest --coverage --verbose",
    "watch": "jest --coverage --verbose --watchAll"
  },
  "keywords": [],
  "author": "",
  "license": "ISC",
  "dependencies": {
    "jest": "^26.6.3"
  },
  "devDependencies": {}
}
